# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

commands:
  print_pipeline_id:
    description: "this enables this part of the code to be reusable"
    parameters:
      to:
        type: string
        default: "$CIRCLE_WORKFLOW_ID"    # optional
    steps:
      - run: echo << parameters.to >>

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  say-myName:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "My name as env var"
          command: echo $MY_NAME_VAR
      - run:
          name: "My surname as env var"
          command: echo ${SURNAME_VAR}
      - run:
          name: "Using built-in env var, identify the branch that I am on"
          command: echo $CIRCLE_BRANCH
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "My Name is Philip" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "check output"
          command: |
            if [[ $(cat ~/output.txt) == "My Name is Philip" ]]; then
              echo "It is working!!!"
            else
              echo "Not working as expected !!"; exit 1
            fi

  usingCommand:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id:
          to: "$CIRCLE_WORKFLOW_ID"

  job_failure_testing1:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "check output"
          command: |
            if [[ $(cat ~/output.txt) == "My Name is Philip" ]]; then
              echo "It is working!!!"
            else
              echo "Not working as expected !!"; exit 1
            fi:
          # note, in the last line above, fi should not have a column. It was intentionally added to introduce an error

  job_failure_testing2:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "My name as env var"
          command: echo This build is triggered by << pipeline.git.branch >> branch
          when: on_fail


# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - say-myName
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
      - usingCommand
      - job_failure_testing1
      - job_failure_testing2

